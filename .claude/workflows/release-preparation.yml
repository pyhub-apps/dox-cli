# Release Preparation Workflow
# Coordinated workflow for preparing and executing releases

workflow:
  name: "Release Preparation"
  description: "Comprehensive release process including testing, building, documentation, and distribution"

phases:
  1_pre_release_check:
    lead: TestGuardian
    duration: "2-3 hours"
    activities:
      - Run full test suite
      - Check coverage metrics
      - Run integration tests
      - Verify benchmarks
      - Security scanning
    outputs:
      - Test report
      - Coverage report
      - Security scan results
      - Performance metrics
    
  2_version_bump:
    lead: GoMaster
    consults: [LibraryDesigner]
    duration: "30 minutes"
    activities:
      - Determine version number
      - Update version constants
      - Check for breaking changes
      - Update go.mod if needed
    outputs:
      - Updated version
      - Breaking change list
      - Dependency updates
  
  3_documentation_update:
    lead: DocScribe
    consults: [CLIArchitect]
    duration: "1-2 hours"
    activities:
      - Update README
      - Write release notes
      - Update API documentation
      - Create migration guide
      - Update examples
    outputs:
      - Release notes
      - Updated documentation
      - Migration guide
      - Changelog entry
  
  4_build_preparation:
    lead: BuildMaster
    supports: [GoMaster]
    duration: "1-2 hours"
    activities:
      - Configure build matrix
      - Set build flags
      - Prepare signing (if applicable)
      - Test build scripts
    outputs:
      - Build configuration
      - Platform matrix
      - Build scripts ready
  
  5_build_execution:
    lead: BuildMaster
    duration: "30-60 minutes"
    activities:
      - Build all platforms
      - Generate checksums
      - Create archives
      - Verify binaries
    outputs:
      - Platform binaries
      - Checksums file
      - Archive files
      - Build logs
  
  6_release_testing:
    lead: TestGuardian
    supports: [BuildMaster]
    duration: "1-2 hours"
    activities:
      - Test binaries on each platform
      - Verify installation scripts
      - Check binary signatures
      - Test update mechanism
    outputs:
      - Platform test results
      - Installation verification
      - Smoke test results
  
  7_release_publication:
    lead: BuildMaster
    supports: [DocScribe]
    duration: "30 minutes"
    activities:
      - Create GitHub release
      - Upload artifacts
      - Publish release notes
      - Tag repository
      - Notify channels
    outputs:
      - Published release
      - Download links
      - Announcement ready

triggers:
  manual:
    - Release preparation request
    - Version tag push
    - Milestone completion
  
  automated:
    - Scheduled releases
    - CI/CD pipeline trigger

version_strategy:
  semantic_versioning:
    major:
      triggers:
        - Breaking API changes
        - Major feature overhaul
        - Incompatible changes
      examples:
        - "v1.0.0 → v2.0.0"
    
    minor:
      triggers:
        - New features
        - Backward compatible changes
        - New commands added
      examples:
        - "v1.0.0 → v1.1.0"
    
    patch:
      triggers:
        - Bug fixes only
        - Documentation updates
        - Performance improvements
      examples:
        - "v1.0.0 → v1.0.1"

release_checklist:
  code_quality:
    - [ ] All tests passing
    - [ ] Coverage > 80%
    - [ ] No critical security issues
    - [ ] Performance benchmarks acceptable
    - [ ] Linting passing
  
  documentation:
    - [ ] README updated
    - [ ] Release notes written
    - [ ] API docs current
    - [ ] Examples working
    - [ ] Migration guide (if needed)
  
  build_artifacts:
    - [ ] Windows binary built
    - [ ] macOS binaries built
    - [ ] Linux binaries built
    - [ ] Checksums generated
    - [ ] Archives created
  
  distribution:
    - [ ] GitHub release created
    - [ ] Artifacts uploaded
    - [ ] Release notes published
    - [ ] Repository tagged
    - [ ] Package managers updated

platform_matrix:
  windows:
    - arch: amd64
      output: pyhub-documents-cli.exe
      test: Windows 10/11 VM
      priority: 1
    
  darwin:
    - arch: amd64
      output: pyhub-documents-cli-darwin-amd64
      test: Intel Mac
      priority: 2
    
    - arch: arm64
      output: pyhub-documents-cli-darwin-arm64
      test: M1/M2 Mac
      priority: 2
  
  linux:
    - arch: amd64
      output: pyhub-documents-cli-linux-amd64
      test: Ubuntu 20.04/22.04
      priority: 3

release_notes_template:
  structure:
    - Highlights (major features)
    - New Features (detailed list)
    - Bug Fixes (with issue numbers)
    - Performance Improvements
    - Documentation Updates
    - Breaking Changes (if any)
    - Migration Guide (if needed)
    - Contributors
    - Full Changelog link

antivirus_preparation:
  pre_release:
    - Submit to VirusTotal
    - Check detection rate
    - Submit to major vendors if needed
    - Document false positives
  
  post_release:
    - Monitor user reports
    - Address false positives
    - Update documentation
    - Vendor communication

rollback_plan:
  triggers:
    - Critical bug discovered
    - Security vulnerability
    - Major compatibility issue
  
  actions:
    - Yank release if possible
    - Publish warning
    - Prepare hotfix
    - Communicate with users

post_release:
  monitoring:
    - Download statistics
    - Issue reports
    - User feedback
    - Performance metrics
  
  follow_up:
    - Address reported issues
    - Plan next release
    - Update roadmap
    - Thank contributors

quality_gates:
  before_build:
    - All tests must pass
    - Documentation complete
    - Version updated correctly
  
  before_release:
    - All platforms built successfully
    - Smoke tests passing
    - Release notes reviewed
  
  after_release:
    - Verify downloads work
    - Check package managers
    - Monitor error reports

success_criteria:
  - All platforms built successfully
  - No critical issues found
  - Documentation up to date
  - Release notes comprehensive
  - Smooth installation process
  - Positive initial feedback